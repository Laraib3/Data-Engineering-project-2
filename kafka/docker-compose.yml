version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  redis:
    image: redis:latest

  airflow-init:
    build:
      context: ./dags
    image: custom-airflow:2.8.1
    depends_on:
      - postgres
      - redis
    env_file:
      - /mnt/d/data-engineering-project - Copy/.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - SF_OCSP_FAIL_OPEN=false
      - AIRFLOW__WEBSERVER__ENABLE_CSRF_PROTECTION=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporarykey
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SAMESITE=None
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX=True
    volumes:
      - ./dags:/opt/airflow/dags
      - ./sql:/opt/airflow/sql
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    entrypoint: >
      bash -c "pip install --no-cache-dir -r /requirements.txt &&
               airflow db migrate &&
               airflow users create --username admin --password admin --firstname Laraib --lastname User --role Admin --email admin@example.com"

  airflow-webserver:
    build:
      context: ./dags
    image: custom-airflow:2.8.1
    restart: always
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    env_file:
      - /mnt/d/data-engineering-project - Copy/.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - SF_OCSP_FAIL_OPEN=false
      - AIRFLOW__WEBSERVER__ENABLE_CSRF_PROTECTION=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporarykey
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SAMESITE=None
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX=True
    volumes:
      - ./dags:/opt/airflow/dags
      - ./sql:/opt/airflow/sql
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt &&
               airflow webserver"

  airflow-scheduler:
    build:
      context: ./dags
    image: custom-airflow:2.8.1
    depends_on:
      - airflow-init
    env_file:
      - /mnt/d/data-engineering-project - Copy/.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - SF_OCSP_FAIL_OPEN=false
      - AIRFLOW__WEBSERVER__ENABLE_CSRF_PROTECTION=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporarykey
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SAMESITE=None
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX=True
    volumes:
      - ./dags:/opt/airflow/dags
      - ./sql:/opt/airflow/sql
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt &&
               airflow scheduler"

  airflow-worker:
    build:
      context: ./dags
    image: custom-airflow:2.8.1
    depends_on:
      - airflow-init
    env_file:
      - /mnt/d/data-engineering-project - Copy/.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - SF_OCSP_FAIL_OPEN=false
      - AIRFLOW__WEBSERVER__ENABLE_CSRF_PROTECTION=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporarykey
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SAMESITE=None
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX=True
    volumes:
      - ./dags:/opt/airflow/dags
      - ./sql:/opt/airflow/sql
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt &&
               airflow celery worker"

  flower:
    build:
      context: ./dags
    image: custom-airflow:2.8.1
    restart: always
    ports:
      - "5555:5555"
    depends_on:
      - airflow-init
    env_file:
      - /mnt/d/data-engineering-project - Copy/.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
      - SF_OCSP_FAIL_OPEN=false
      - SNOWFLAKE_DISABLE_OCSP=true
      - AIRFLOW__WEBSERVER__ENABLE_CSRF_PROTECTION=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporarykey
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SAMESITE=None
      - AIRFLOW__WEBSERVER__SESSION_COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX=True
    volumes:
      - ./requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt &&
               airflow celery flower"

volumes:
  postgres-db-volume:
